openapi: "3.0.0"
info:
  title: "RentX Documentation"
  description: "This is an car rent system API"
  version: "1.0.0"
  contact:
    email: "willsouzafilho@gmail.com"
tags:
  - name: "Authentication"
    description: "Everything about authentication"
  - name: "Cars"
    description: "Everything about cars"
  - name: "Category"
    description: "Everything about categories"
  - name: "Specification"
    description: "Everything about specifications"
  - name: "Users"
    description: "Everything about users"
paths:
  /auth/login:
    post:
      tags:
        - "Authentication"
      summary: "Authenticate to the application"
      description: "Authenticate to the application"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Authenticate on the application"
          required: true
          schema:
            $ref: "#/components/schemas/Credentials"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/components/schemas/LoginResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Email or password incorrect!"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /cars:
    post:
      tags:
        - "Cars"
      summary: "Create a new car"
      description: "Create a new car"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Car object that needs to be added"
          required: true
          schema:
            $ref: "#/components/schemas/CreateCar"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Car already exists!"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /categories:
    post:
      tags:
        - "Category"
      summary: "Create a new category"
      description: "Create a new category"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Category object that needs to be added"
          required: true
          schema:
            $ref: "#/components/schemas/CreateCategory"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Specification already exists!"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
    get:
      tags:
        - "Category"
      summary: "List all categories"
      description: "List all categories"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /categories/import:
    post:
      tags:
        - "Category"
      summary: "Bulk create categories"
      description: "Bulk create categories"
      consumes:
        - "multipart/form-data"
      parameters:
        - in: "formData"
          name: "file"
          description: "The file to upload"
          type: "file"
          required: true
      responses:
        "201":
          description: "Created"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /specifications:
    post:
      tags:
        - "Specification"
      summary: "Create a new specification"
      description: "Create a new specification"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Specification object that needs to be added"
          required: true
          schema:
            $ref: "#/components/schemas/CreateSpecification"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Specification already exists!"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /users:
    post:
      tags:
        - "Users"
      summary: "Create a new user"
      description: "Create a new user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Data to create a new user"
          required: true
          schema:
            $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Specification already exists!"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
  /users/avatar:
    patch:
      tags:
        - "Users"
      summary: "Update the user avatar"
      description: "Update the user avatar"
      consumes:
        - "multipart/form-data"
      parameters:
        - in: "formData"
          name: "avatar"
          description: "The avatar image to upload"
          type: "file"
          required: true
      responses:
        "201":
          description: "Created"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppError"
              example:
                message: "Internal server error - error message"
components:
  schemas:
    AppError:
      type: "object"
      properties:
        message:
          type: "string"
    Credentials:
      type: "object"
      properties:
        email:
          type: "string"
          example: "user@example.com"
        password:
          type: "string"
          example: "123456"
    LoginResponse:
      type: "object"
      properties:
        token:
          type: "string"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NDg3NDcyNjgsImV4cCI6MTY0ODgzMzY2OCwic3ViIjoiYmYzZDk3ZjUtNTA4ZC00ZmI0LWFlZjMtMjQ0MjVmNmM3ZjE1In0.4niAF4e_wzjwYEntSVl4brxdtZgYK-8AqaG768_ruZQ"
        user:
          type: "object"
          properties:
            name:
              type: "string"
              example: "User Example"
            email:
              type: "string"
              example: "user@example.com"
    CreateCar:
      type: "object"
      required:
        - "name"
        - "description"
        - "daily_rate"
        - "license_plate"
        - "fine_amount"
        - "brand"
        - "category_id"
      properties:
        name:
          type: "string"
          example: "Car name sample"
        description:
          type: "string"
          example: "Car description sample"
        daily_rate:
          type: "number"
          example: 100
        license_plate:
          type: "string"
          example: "ABC-1234"
        fine_amount:
          type: "number"
          example: 60
        brand:
          type: "string"
          example: "Car brand sample"
        category_id:
          type: "string"
          example: "f135221e-e18b-4084-bdeb-4a0f856f92d6"
    Category:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          example: "f135221e-e18b-4084-bdeb-4a0f856f92d6"
        name:
          type: "string"
          example: "Category name sample"
        description:
          type: "string"
          example: "Category description sample"
        created_at:
          type: "string"
          format: "date-time"
          example: "2022-03-30T00:15:37.505Z"
    CreateCategory:
      type: "object"
      required:
        - "name"
        - "description"
      properties:
        name:
          type: "string"
          example: "Category name sample"
        description:
          type: "string"
          example: "Category description sample"
    Specification:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          example: "f135221e-e18b-4084-bdeb-4a0f856f92d6"
        name:
          type: "string"
          example: "Specification name sample"
        description:
          type: "string"
          example: "Specification description sample"
        created_at:
          type: "string"
          format: "date-time"
          example: "2022-03-30T00:15:37.505Z"
    CreateSpecification:
      type: "object"
      required:
        - "name"
        - "description"
      properties:
        name:
          type: "string"
          example: "Specification name sample"
        description:
          type: "string"
          example: "Specification description sample"
    CreateUser:
      type: "object"
      required:
        - "name"
        - "email"
        - "password"
        - "driver_license"
      properties:
        name:
          type: "string"
          example: "Example User"
        email:
          type: "string"
          example: "user@example.com"
        password:
          type: "string"
          example: "123456"
        driver_license:
          type: "string"
          example: "ABC123$%"
